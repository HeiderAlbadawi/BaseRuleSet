{
    "AlertDetailOverrideAlertDescriptionFormat":  null,
    "AlertDetailOverrideAlertDisplayNameFormat":  null,
    "AlertDetailOverrideAlertSeverityColumnName":  null,
    "AlertDetailOverrideAlertTacticsColumnName":  null,
    "AlertRuleTemplateName":  null,
    "CustomDetail":  {

                     },
    "Description":  "This rule detects MFA registration from either a relatively new location or from an unfamiliar IP address.",
    "DisplayName":  "MFA Registered From an Unfamiliar IP Address",
    "Enabled":  true,
    "EntityMapping":  [
                          {
                              "EntityType":  {

                                             },
                              "FieldMapping":  [
                                                   {
                                                       "ColumnName":  "UserPrincipalName",
                                                       "Identifier":  "Name"
                                                   }
                                               ]
                          },
                          {
                              "EntityType":  {

                                             },
                              "FieldMapping":  [
                                                   {
                                                       "ColumnName":  "IPAddress",
                                                       "Identifier":  "Address"
                                                   }
                                               ]
                          },
                          {
                              "EntityType":  {

                                             },
                              "FieldMapping":  [
                                                   {
                                                       "ColumnName":  "Operations",
                                                       "Identifier":  "CommandLine"
                                                   }
                                               ]
                          },
                          {
                              "EntityType":  {

                                             },
                              "FieldMapping":  [
                                                   {
                                                       "ColumnName":  "Case",
                                                       "Identifier":  "CommandLine"
                                                   }
                                               ]
                          }
                      ],
    "Etag":  "\"9c04a7f6-0000-1100-0000-66caed0e0000\"",
    "EventGroupingSettingAggregationKind":  {

                                            },
    "GroupingConfigurationEnabled":  false,
    "GroupingConfigurationGroupByAlertDetail":  [

                                                ],
    "GroupingConfigurationGroupByCustomDetail":  [

                                                 ],
    "GroupingConfigurationGroupByEntity":  [

                                           ],
    "GroupingConfigurationLookbackDuration":  {
                                                  "Ticks":  180000000000,
                                                  "Days":  0,
                                                  "Hours":  5,
                                                  "Milliseconds":  0,
                                                  "Minutes":  0,
                                                  "Seconds":  0,
                                                  "TotalDays":  0.20833333333333331,
                                                  "TotalHours":  5,
                                                  "TotalMilliseconds":  18000000,
                                                  "TotalMinutes":  300,
                                                  "TotalSeconds":  18000
                                              },
    "GroupingConfigurationMatchingMethod":  {

                                            },
    "GroupingConfigurationReopenClosedIncident":  false,
    "Id":  "/subscriptions/5cfeafdb-fc6b-4d09-971d-3320c5ec14a0/resourceGroups/training_jordan/providers/Microsoft.OperationalInsights/workspaces/acmesentinel/providers/Microsoft.SecurityInsights/alertRules/ff26f48e-6f7e-41d4-91fa-b19d40e00387",
    "IncidentConfigurationCreateIncident":  true,
    "Kind":  {

             },
    "LastModifiedUtc":  "\/Date(1724574986873)\/",
    "Name":  "ff26f48e-6f7e-41d4-91fa-b19d40e00387",
    "Query":  "let MSIPs = _GetWatchlist(\"MSPublicIPsV2\")\r\n    | project Subnet = SearchKey, FirstOctet = toint(split(SearchKey, \".\")[0]);\r\nlet MFAChangeCaseNewIP = AuditLogs \r\n    | where TimeGenerated \u003e ago(1h) // ADJUST BASED ON RULE FREQUENCY\r\n    | where OperationName in (\"User registered security info\", \"User deleted security info\", \"User registered all required security info\", \"User changed default security info\") \r\n    | where Result == \"success\" \r\n    | extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress) \r\n    | extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | where isnotempty(IPAddress)\r\n    | project\r\n        UserPrincipalName,\r\n        IPAddress,\r\n        OperationName,\r\n        ResultDescription,\r\n        Case = \"New IPAddress\";\r\nlet ManagedAttempts = SigninLogs\r\n    | union AADNonInteractiveUserSignInLogs\r\n    | where TimeGenerated \u003e ago(14d)\r\n    | where (tostring(parse_json(DeviceDetail_dynamic).trustType) != \"\" or tostring(parse_json(DeviceDetail_string).trustType) != \"\") or (DeviceDetail_dynamic or DeviceDetail_string contains \"PII Removed\")\r\n    | distinct IPAddress;\r\nlet MultipleUsersIPSigninLogs = SigninLogs\r\n    | union AADNonInteractiveUserSignInLogs\r\n    | where TimeGenerated \u003e ago(14d)\r\n    | where ResultType == 0 and AuthenticationRequirement contains \"Multifactor\"\r\n    | summarize SameIPUsersCount = dcount(UserPrincipalName) by IPAddress\r\n    | where SameIPUsersCount \u003e 2; // ADJUST TO TUNE THE RULE\r\nlet SimilarIPSubnetUsersSigninLogs = SigninLogs\r\n    | union AADNonInteractiveUserSignInLogs\r\n    | where TimeGenerated \u003e ago(14d)\r\n    | where ResultType == 0 and AuthenticationRequirement contains \"Multifactor\"\r\n    | extend IPSubnet = iff(\r\n                            indexof(IPAddress, \":\") != -1,  // If colon exists, it\u0027s IPv6\r\n                            trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \":\", indexof(IPAddress, \":\") + 1))),\r\n                            trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \".\", indexof(IPAddress, \".\") + 1)))\r\n                        )\r\n    | summarize SameIPSubnetUsersCount = dcount(UserPrincipalName) by IPSubnet\r\n    | where SameIPSubnetUsersCount \u003e 2; // ADJUST TO TUNE THE RULE\r\nlet MultipleUsersIPAuditLogs = AuditLogs\r\n    | where TimeGenerated \u003e ago(14d)\r\n    | extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress) \r\n    | extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | summarize SameIPUsersCount = dcount(UserPrincipalName) by IPAddress\r\n    | where SameIPUsersCount \u003e 2; // ADJUST TO TUNE THE RULE\r\nlet SimilarIPSubnetUsersAuditLogs = AuditLogs\r\n    | where TimeGenerated \u003e ago(14d)\r\n    | extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress) \r\n    | extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend IPSubnet = iff(\r\n                            indexof(IPAddress, \":\") != -1,  // If colon exists, it\u0027s IPv6\r\n                            trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \":\", indexof(IPAddress, \":\") + 1))),\r\n                            trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \".\", indexof(IPAddress, \".\") + 1)))\r\n                        )\r\n    | summarize SameIPSubnetUsersCount = dcount(UserPrincipalName) by IPSubnet\r\n    | where SameIPSubnetUsersCount \u003e 2; // ADJUST TO TUNE THE RULE\r\nlet KnownLocations = SigninLogs\r\n    | where TimeGenerated between(ago(14d) .. ago(7d))\r\n    | where ResultType == 0\r\n    | extend LocationDetail = strcat(Location, \"-\", LocationDetails.state)\r\n    | summarize UserKnownLocation = make_set(LocationDetail) by UserPrincipalName;\r\nlet SUSLocation = SigninLogs\r\n    | where TimeGenerated \u003e ago(7d)\r\n    | where ResultType == 0\r\n    | join kind=inner KnownLocations on UserPrincipalName // To avoid new users MFA spam\r\n    | join kind=inner MFAChangeCaseNewIP on IPAddress\r\n    | extend AnomalousLocation = strcat(Location, \"-\", LocationDetails.state)\r\n    | where not(UserKnownLocation has AnomalousLocation)\r\n    | join kind=leftanti ManagedAttempts on IPAddress\r\n    | distinct UserPrincipalName;\r\nlet MFAChangeCaseNewLocation = AuditLogs \r\n    | where TimeGenerated \u003e ago(1h) // ADJUST BASED ON RULE FREQUENCY\r\n    | where OperationName in (\"User registered security info\", \"User deleted security info\", \"User registered all required security info\", \"User changed default security info\") \r\n    | where Result == \"success\" \r\n    | extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress) \r\n    | extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | where isnotempty(IPAddress)\r\n    | project\r\n        UserPrincipalName,\r\n        IPAddress,\r\n        OperationName,\r\n        ResultDescription,\r\n        Case = \"New Location\"\r\n    | join kind=inner SUSLocation on UserPrincipalName\r\n    | summarize\r\n        Operations = make_set(OperationName),\r\n        ResultDescriptions = make_set(ResultDescription)\r\n        by UserPrincipalName, IPAddress, Case;\r\nlet subnetCheck = MFAChangeCaseNewIP\r\n    | extend IP = tostring(IPAddress)\r\n    | extend FirstOctet = toint(split(IP, \".\")[0])\r\n    | join kind=leftouter MSIPs on FirstOctet\r\n    | extend IsInSubnet = ipv4_is_in_range(IP, Subnet)\r\n    | summarize IsInSubnet = max(toint(IsInSubnet)) by IP;\r\nMFAChangeCaseNewIP\r\n| extend IPSubnet = iff(\r\n                        indexof(IPAddress, \":\") != -1,  // If colon exists, it\u0027s IPv6\r\n                        trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \":\", indexof(IPAddress, \":\") + 1))),\r\n                        trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \".\", indexof(IPAddress, \".\") + 1)))\r\n                    )\r\n| join kind=leftanti ManagedAttempts on IPAddress\r\n| join kind=leftanti MultipleUsersIPSigninLogs on IPAddress\r\n| join kind=leftanti MultipleUsersIPAuditLogs on IPAddress\r\n| join kind=leftanti SimilarIPSubnetUsersSigninLogs on IPSubnet\r\n| join kind=leftanti SimilarIPSubnetUsersAuditLogs on IPSubnet\r\n| join kind=leftouter subnetCheck on $left.IPAddress == $right.IP\r\n| extend IsInSubnet = tobool(IsInSubnet)\r\n| where IsInSubnet == false\r\n| project-away IPSubnet\r\n| summarize\r\n    Operations = make_set(OperationName),\r\n    ResultDescriptions = make_set(ResultDescription)\r\n    by UserPrincipalName, IPAddress, Case\r\n| union MFAChangeCaseNewLocation",
    "QueryFrequency":  {
                           "Ticks":  36000000000,
                           "Days":  0,
                           "Hours":  1,
                           "Milliseconds":  0,
                           "Minutes":  0,
                           "Seconds":  0,
                           "TotalDays":  0.041666666666666664,
                           "TotalHours":  1,
                           "TotalMilliseconds":  3600000,
                           "TotalMinutes":  60,
                           "TotalSeconds":  3600
                       },
    "QueryPeriod":  {
                        "Ticks":  12096000000000,
                        "Days":  14,
                        "Hours":  0,
                        "Milliseconds":  0,
                        "Minutes":  0,
                        "Seconds":  0,
                        "TotalDays":  14,
                        "TotalHours":  336,
                        "TotalMilliseconds":  1209600000,
                        "TotalMinutes":  20160,
                        "TotalSeconds":  1209600
                    },
    "Severity":  {

                 },
    "SuppressionDuration":  {
                                "Ticks":  180000000000,
                                "Days":  0,
                                "Hours":  5,
                                "Milliseconds":  0,
                                "Minutes":  0,
                                "Seconds":  0,
                                "TotalDays":  0.20833333333333331,
                                "TotalHours":  5,
                                "TotalMilliseconds":  18000000,
                                "TotalMinutes":  300,
                                "TotalSeconds":  18000
                            },
    "SuppressionEnabled":  false,
    "SystemData":  {
                       "CreatedAt":  null,
                       "CreatedBy":  null,
                       "CreatedByType":  null,
                       "LastModifiedAt":  null,
                       "LastModifiedBy":  null,
                       "LastModifiedByType":  null
                   },
    "SystemDataCreatedAt":  null,
    "SystemDataCreatedBy":  null,
    "SystemDataCreatedByType":  null,
    "SystemDataLastModifiedAt":  null,
    "SystemDataLastModifiedBy":  null,
    "SystemDataLastModifiedByType":  null,
    "Tactic":  [
                   {

                   }
               ],
    "TemplateVersion":  null,
    "TriggerOperator":  {

                        },
    "TriggerThreshold":  0,
    "Type":  "Microsoft.SecurityInsights/alertRules"
}