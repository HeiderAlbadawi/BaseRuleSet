{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/3ecb22ed-fe50-4006-ac55-11b2c5562b33\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/3ecb22ed-fe50-4006-ac55-11b2c5562b33\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Risky Sign-in Detected",
                                             "description":  "This rule detects sign-ins that have been flagged as risky by Entra ID Protection.",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let IPManagedAttempts = SigninLogs\r\n| union AADNonInteractiveUserSignInLogs\r\n| where TimeGenerated \u003e ago(14d)\r\n| where (tostring( parse_json(DeviceDetail_dynamic).trustType) != \"\" or tostring( parse_json(DeviceDetail_string).trustType) != \"\") or (DeviceDetail_dynamic or DeviceDetail_string contains \"PII Removed\")\r\n| distinct IPAddress;\r\nlet IncidentCreated =SecurityIncident\r\n| where TimeGenerated \u003e ago(14d)\r\n| where Owner contains \"@wizardcyber.com\" and Owner !contains \"soc@wizardcyber.com\"\r\n| mv-expand AlertIds\r\n| extend AlertID = tostring(AlertIds)\r\n| distinct AlertID;\r\nlet AuthenticationAttemptFromNewCountryAlert = SecurityAlert\r\n| where TimeGenerated \u003e ago(14d)\r\n| where AlertName contains \"Authentication Attempt from New Country\"\r\n| extend parsed = parse_json(Entities)\r\n| mv-expand parsed\r\n| where parsed.Type == \"ip\"\r\n| extend NewCountryIPAddress = tostring(parsed.Address)\r\n| distinct NewCountryIPAddress,SystemAlertId\r\n| join kind=inner IncidentCreated on $left.SystemAlertId == $right.AlertID;\r\nlet AnomalousSigninAlert = SecurityAlert\r\n| where TimeGenerated \u003e ago(14d)\r\n| where AlertName contains \"Anomalous Sign-in Detected\"\r\n| extend parsed = parse_json(Entities)\r\n| mv-expand parsed\r\n| where parsed.Type == \"ip\"\r\n| extend AnomalousSigninIPAddress = tostring(parsed.Address)\r\n| distinct AnomalousSigninIPAddress,SystemAlertId\r\n| join kind=inner IncidentCreated on $left.SystemAlertId == $right.AlertID;\r\nlet ImpossibleTravelAlert =SecurityAlert\r\n| where TimeGenerated \u003e ago(14d)\r\n| where AlertName contains \"Impossible travel\"\r\n| extend parsed = parse_json(Entities)\r\n| mv-expand parsed\r\n| where parsed.Type == \"ip\"\r\n| extend ImpossibleTravelIPAddress = tostring(parsed.Address)\r\n| distinct ImpossibleTravelIPAddress,SystemAlertId\r\n| join kind=inner IncidentCreated on $left.SystemAlertId == $right.AlertID;\r\nlet IdentityProtectionAlerts = SecurityAlert\r\n| where TimeGenerated \u003e ago(14d)\r\n| where ProviderName == \"IPC\"\r\n| extend parsed = parse_json(Entities)\r\n| mv-expand parsed\r\n| where parsed.Type == \"ip\"\r\n| extend IPCIPAddress = tostring(parsed.Address)\r\n| distinct IPCIPAddress,SystemAlertId\r\n| join kind=inner IncidentCreated on $left.SystemAlertId == $right.AlertID;\r\nlet RiskyUsers = AADUserRiskEvents\r\n| where TimeGenerated \u003e ago(1h)\r\n| summarize min(TimeGenerated),make_set(RiskEventType),make_set(RiskLevel),make_set(RiskState),make_set(RiskDetail),make_set(AdditionalInfo)  by  Type = \"UserRiskEvents\",UserPrincipalName,IpAddress,tostring(Location)\r\n| project-reorder min_TimeGenerated,UserPrincipalName,IpAddress,Location,set_AdditionalInfo,set_RiskEventType,set_RiskLevel,set_RiskDetail,set_RiskState\r\n| join kind=leftanti IPManagedAttempts on $left.IpAddress == $right.IPAddress\r\n| join kind=leftanti AuthenticationAttemptFromNewCountryAlert on $left.IpAddress == $right.NewCountryIPAddress\r\n| join kind=leftanti AnomalousSigninAlert on $left.IpAddress == $right.AnomalousSigninIPAddress\r\n| join kind=leftanti ImpossibleTravelAlert on $left.IpAddress == $right.ImpossibleTravelIPAddress\r\n| join kind=leftanti IdentityProtectionAlerts on $left.IpAddress == $right.IPCIPAddress\r\n| extend IPAddress = IpAddress\r\n| extend LocationDetails = Location\r\n| project-away IpAddress,Location;\r\nlet RiskySignins =SigninLogs\r\n| where TimeGenerated \u003e ago(1h)\r\n| where RiskEventTypes != \"[]\" or RiskEventTypes != \"[]\"\r\n| summarize min(TimeGenerated),make_set(ResultType),make_set(ResultDescription),make_set(Status),make_set(RiskEventTypes),make_set(RiskEventTypes_V2)  by  Type = \"Signinlogs\",UserPrincipalName,IPAddress,tostring(LocationDetails),tostring(DeviceDetail)\r\n| join kind=leftanti IPManagedAttempts on $left.IPAddress == $right.IPAddress\r\n| join kind=leftanti AuthenticationAttemptFromNewCountryAlert on $left.IPAddress == $right.NewCountryIPAddress\r\n| join kind=leftanti AnomalousSigninAlert on $left.IPAddress == $right.AnomalousSigninIPAddress\r\n| join kind=leftanti ImpossibleTravelAlert on $left.IPAddress == $right.ImpossibleTravelIPAddress\r\n| join kind=leftanti IdentityProtectionAlerts on $left.IPAddress == $right.IPCIPAddress;\r\nlet RiskTable = union isfuzzy=true RiskySignins,RiskyUsers;\r\nRiskTable\r\n",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P14D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CredentialAccess"
                                                         ],
                                             "techniques":  [

                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  null,
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "UserPrincipalName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "IPAddress"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "Type"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}