{
    "AlertDetailOverrideAlertDescriptionFormat":  null,
    "AlertDetailOverrideAlertDisplayNameFormat":  null,
    "AlertDetailOverrideAlertSeverityColumnName":  null,
    "AlertDetailOverrideAlertTacticsColumnName":  null,
    "AlertRuleTemplateName":  null,
    "CustomDetail":  {

                     },
    "Description":  "A user(s) have had multiple MFA requests fail within a 15 minute time period due to the user not completing the MFA prompt. This activity is a known tactic by threat actors to encourage the user to accept the MFA prompts due to repeated attempts made in quick succession.",
    "DisplayName":  "Multi Factor Authentication (MFA) Prompt Fatigue",
    "Enabled":  true,
    "EntityMapping":  [
                          {
                              "EntityType":  {

                                             },
                              "FieldMapping":  [
                                                   {
                                                       "ColumnName":  "Identity",
                                                       "Identifier":  "FullName"
                                                   }
                                               ]
                          }
                      ],
    "Etag":  "\"2200f6da-0000-1100-0000-66af3ab90000\"",
    "EventGroupingSettingAggregationKind":  {

                                            },
    "GroupingConfigurationEnabled":  true,
    "GroupingConfigurationGroupByAlertDetail":  [

                                                ],
    "GroupingConfigurationGroupByCustomDetail":  [

                                                 ],
    "GroupingConfigurationGroupByEntity":  [

                                           ],
    "GroupingConfigurationLookbackDuration":  {
                                                  "Ticks":  180000000000,
                                                  "Days":  0,
                                                  "Hours":  5,
                                                  "Milliseconds":  0,
                                                  "Minutes":  0,
                                                  "Seconds":  0,
                                                  "TotalDays":  0.20833333333333331,
                                                  "TotalHours":  5,
                                                  "TotalMilliseconds":  18000000,
                                                  "TotalMinutes":  300,
                                                  "TotalSeconds":  18000
                                              },
    "GroupingConfigurationMatchingMethod":  {

                                            },
    "GroupingConfigurationReopenClosedIncident":  false,
    "Id":  "/subscriptions/5cfeafdb-fc6b-4d09-971d-3320c5ec14a0/resourceGroups/Training_Jordan/providers/Microsoft.OperationalInsights/workspaces/AcmeSentinel/providers/Microsoft.SecurityInsights/alertRules/f4b5c534-8238-4a51-b473-f946b8d2d6a1",
    "IncidentConfigurationCreateIncident":  true,
    "Kind":  {

             },
    "LastModifiedUtc":  "\/Date(1722759864115)\/",
    "Name":  "f4b5c534-8238-4a51-b473-f946b8d2d6a1",
    "Query":  "let threshold = 5;\r\nlet FailedMFASignins = SigninLogs\r\n    | where TimeGenerated \u003e ago(15m)\r\n    | where ResultType == 500121\r\n    | extend isManaged = tostring(parse_json(DeviceDetail).isManaged)\r\n    | extend isJoined = tostring(parse_json(DeviceDetail).trustType)\r\n    | extend isRegistered = tostring(parse_json(DeviceDetail).trustType)\r\n    | project\r\n        TimeGenerated,\r\n        ResultType,\r\n        ResultDescription,\r\n        Identity,\r\n        IPAddress,\r\n        AppDisplayName,\r\n        isManaged,\r\n        isJoined,\r\n        isRegistered\r\n    | summarize \r\n        MFAFailedCount=count() / 2,\r\n        FailedAppsList = make_set(AppDisplayName)\r\n        by bin(TimeGenerated, 60m), Identity, IPAddress, isManaged, isJoined, isRegistered\r\n    | where MFAFailedCount \u003e= threshold;\r\nlet OldestSuccessfulSignin = SigninLogs\r\n    | where ResultType == 0\r\n    | join kind= inner (FailedMFASignins) on IPAddress\r\n    | summarize OldestIPSigninfrom2days = min(TimeGenerated) by IPAddress;\r\nlet SuccessfulMFASignins = SigninLogs\r\n    | where TimeGenerated \u003e ago(15m)\r\n    | where ResultType != 500121 // Assuming non-500121 result type is a successful MFA\r\n    | extend isJoined = tostring(parse_json(DeviceDetail).trustType)\r\n    | extend isRegistered = tostring(parse_json(DeviceDetail).trustType)\r\n    | project TimeGenerated, ResultType, Identity, IPAddress, isJoined, isRegistered\r\n    | summarize SuccessfulMFACount=count() by Identity, IPAddress, isJoined, isRegistered;\r\nlet SameIPUsersSignins = SigninLogs\r\n    | join kind=inner (FailedMFASignins) on IPAddress\r\n    | where not( Identity contains \"-\")\r\n    | distinct Identity,IPAddress\r\n    | summarize SameIPUsers2DaysCount = count() by IPAddress\r\n    | project IPAddress,SameIPUsers2DaysCount;\r\nlet SameIPSuccessfulSignins2Days = SigninLogs\r\n    | where ResultType == 0\r\n    | summarize IPSuccessfulSignins2DaysCount = count() by IPAddress;\r\nlet JoinedAttempt = SigninLogs\r\n| union AADNonInteractiveUserSignInLogs\r\n| where (tostring( parse_json(DeviceDetail_dynamic).trustType) != \"\" or tostring( parse_json(DeviceDetail_string).trustType) != \"\") or (DeviceDetail_dynamic or DeviceDetail_string contains \"PII Removed\")\r\n| summarize IPJoinedAttempts2DaysCount = count() by IPAddress;\r\nlet RegistereddAttempt = SigninLogs\r\n| union AADNonInteractiveUserSignInLogs\r\n| where (tostring( parse_json(DeviceDetail_dynamic).trustType) != \"\" or tostring( parse_json(DeviceDetail_string).trustType) != \"\") or (DeviceDetail_dynamic or DeviceDetail_string contains \"PII Removed\")\r\n| summarize IPRegisteredAttempts2DaysCount = count() by IPAddress;    \r\nFailedMFASignins\r\n| join kind=inner (SuccessfulMFASignins) on Identity, IPAddress, isJoined, isRegistered\r\n| extend ManagedDevice = iif(isManaged == \"true\", \"Managed\", \"Unmanaged\")\r\n| extend JoinedDevice = iif(isJoined contains \"Azure AD joined\", \"Joined\", \"Not Joined\")\r\n| extend RegisteredDevice = iif(isRegistered contains \"Registered\", \"Registered\", \"Not Registered\")\r\n| project\r\n    TimeGenerated,\r\n    Identity,\r\n    IPAddress,\r\n    MFAFailedCount,\r\n    FailedAppsList,\r\n    SuccessfulMFACount,\r\n    ManagedDevice,\r\n    JoinedDevice,\r\n    RegisteredDevice\r\n| join kind=leftouter (SameIPUsersSignins) on IPAddress\r\n| extend SameIPUsers2DaysCount = coalesce(SameIPUsers2DaysCount, 0)\r\n| join kind= leftouter (SameIPSuccessfulSignins2Days) on $left.IPAddress == $right.IPAddress\r\n| extend IPSuccessfulSignins2DaysCount = coalesce(IPSuccessfulSignins2DaysCount, 0)\r\n| join kind=leftouter (RegistereddAttempt) on $left.IPAddress == $right.IPAddress\r\n| extend IPRegisteredAttempts2DaysCount = coalesce(IPRegisteredAttempts2DaysCount, 0)\r\n| join kind=leftouter  (JoinedAttempt) on $left.IPAddress == $right.IPAddress\r\n| extend IPJoinedAttempts2DaysCount= coalesce(IPJoinedAttempts2DaysCount, 0)\r\n| join kind=leftouter   OldestSuccessfulSignin on IPAddress\r\n| project \r\n    TimeGenerated,\r\n    Identity,\r\n    IPAddress,\r\n    MFAFailedCount,\r\n    FailedAppsList,\r\n    SuccessfulMFACount,\r\n    SameIPUsers2DaysCount,\r\n    IPSuccessfulSignins2DaysCount,\r\n    OldestIPSigninfrom2days,\r\n    IPJoinedAttempts2DaysCount,\r\n    IPRegisteredAttempts2DaysCount,\r\n    ManagedDevice,\r\n    JoinedDevice,\r\n    RegisteredDevice\r\n| where (IPJoinedAttempts2DaysCount == 0 and IPRegisteredAttempts2DaysCount == 0)\r\n",
    "QueryFrequency":  {
                           "Ticks":  9000000000,
                           "Days":  0,
                           "Hours":  0,
                           "Milliseconds":  0,
                           "Minutes":  15,
                           "Seconds":  0,
                           "TotalDays":  0.010416666666666666,
                           "TotalHours":  0.25,
                           "TotalMilliseconds":  900000,
                           "TotalMinutes":  15,
                           "TotalSeconds":  900
                       },
    "QueryPeriod":  {
                        "Ticks":  1692000000000,
                        "Days":  1,
                        "Hours":  23,
                        "Milliseconds":  0,
                        "Minutes":  0,
                        "Seconds":  0,
                        "TotalDays":  1.9583333333333333,
                        "TotalHours":  47,
                        "TotalMilliseconds":  169200000,
                        "TotalMinutes":  2820,
                        "TotalSeconds":  169200
                    },
    "Severity":  {

                 },
    "SuppressionDuration":  {
                                "Ticks":  180000000000,
                                "Days":  0,
                                "Hours":  5,
                                "Milliseconds":  0,
                                "Minutes":  0,
                                "Seconds":  0,
                                "TotalDays":  0.20833333333333331,
                                "TotalHours":  5,
                                "TotalMilliseconds":  18000000,
                                "TotalMinutes":  300,
                                "TotalSeconds":  18000
                            },
    "SuppressionEnabled":  false,
    "SystemData":  {
                       "CreatedAt":  null,
                       "CreatedBy":  null,
                       "CreatedByType":  null,
                       "LastModifiedAt":  null,
                       "LastModifiedBy":  null,
                       "LastModifiedByType":  null
                   },
    "SystemDataCreatedAt":  null,
    "SystemDataCreatedBy":  null,
    "SystemDataCreatedByType":  null,
    "SystemDataLastModifiedAt":  null,
    "SystemDataLastModifiedBy":  null,
    "SystemDataLastModifiedByType":  null,
    "Tactic":  [
                   {

                   }
               ],
    "TemplateVersion":  null,
    "TriggerOperator":  {

                        },
    "TriggerThreshold":  0,
    "Type":  "Microsoft.SecurityInsights/alertRules"
}