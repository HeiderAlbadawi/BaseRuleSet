{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/b1d9b275-d95c-4f77-8cc7-685cf2bec736\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/b1d9b275-d95c-4f77-8cc7-685cf2bec736\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Possible Dll injection T1055.001 (Needs Toning)",
                                             "description":  "DLL injection detection by Mohamad Al-Shahwan And Ahmad Altrabsheh",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let CreateRemoteThreadInjections = DeviceEvents\r\n    | where ActionType == \"CreateRemoteThreadApiCall\"\r\n    | extend Method = \"CreateRemoteThread\";\r\nlet MapViewInjections = DeviceEvents\r\n    | where ActionType in (\"MapViewOfFileApiCall\", \"NtMapViewOfSectionApiCall\")\r\n    | extend Method = \"MapViewOfFile/NtMapViewOfSection\";\r\nlet DirectDLLLoadInjections = DeviceEvents\r\n    | where ActionType in (\"LdrLoadDllApiCall\", \"LoadLibraryWApiCall\", \"LoadLibraryExApiCall\")\r\n    | extend Method = \"DirectDLLLoad\";\r\nlet Regsvr32Rundll32Injections = DeviceProcessEvents\r\n    | where FileName in (\"regsvr32.exe\", \"rundll32.exe\")\r\n    | extend Method = \"Regsvr32/Rundll32 Injection\", TargetDLL = extract(@\"(?i)(\\S+\\.dll)\", 1, ProcessCommandLine);\r\nlet InjectionAPIs = union CreateRemoteThreadInjections, MapViewInjections, DirectDLLLoadInjections, Regsvr32Rundll32Injections;\r\n// Refined InjectorID to extract the ProcessId directly\r\nlet InjectorID = AlertEvidence\r\n| where AttackTechniques contains \"T1055.001\"\r\n| extend InjectorProcessId = tolong(parse_json(AdditionalFields).ProcessId) // Convert to long for matching\r\n| where isnotnull(InjectorProcessId) // Ensure the ProcessId was successfully parsed\r\n| project InjectorProcessId; // Only project the ID for efficient joining\r\nlet FilteredInjections = InjectionAPIs\r\n    | extend InitiatingProcess = coalesce(InitiatingProcessFileName, FileName),\r\n             InitiatingProcessId = coalesce(InitiatingProcessId, ProcessId),\r\n             TargetProcess = iff(isempty(FileName) and isnotempty(TargetDLL), TargetDLL, FileName),\r\n             TargetProcessId = coalesce(ProcessId, 0)\r\n    | where InitiatingProcess != TargetProcess\r\n    // Removed the \u0027in\u0027 filter here, as we\u0027ll do an explicit join\r\n    // | where DeviceName contains \"MOH-WIN11-OBORE\"\r\n    ;\r\nFilteredInjections\r\n// Join FilteredInjections with InjectorID on the respective process IDs\r\n| join kind=inner (InjectorID) on $left.InitiatingProcessId == $right.InjectorProcessId\r\n| join kind=inner (\r\n    DeviceImageLoadEvents\r\n    | where FileName endswith \".dll\"\r\n    | extend TargetProcessId = InitiatingProcessId // Assuming InitiatingProcessId in DeviceImageLoadEvents refers to the process that loaded the DLL\r\n    | project InjectedDLL = FileName, DllPath = FolderPath, TargetProcessId, TimeGenerated\r\n    | where DllPath !has \"C:\\\\Windows\\\\System32\\\\\"\r\n) on TargetProcessId\r\n| project TimeGenerated,DeviceId, DeviceName, Method, InitiatingProcess, InitiatingProcessId, InitiatingProcessCommandLine,\r\n          TargetProcess, TargetProcessId, ProcessCommandLine, InjectedDLL, DllPath",
                                             "queryFrequency":  "PT5M",
                                             "queryPeriod":  "PT5M",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "PrivilegeEscalation",
                                                             "DefenseEvasion"
                                                         ],
                                             "techniques":  [

                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "AlertPerResult"
                                                                       },
                                             "alertDetailsOverride":  {
                                                                          "alertDynamicProperties":  [

                                                                                                     ]
                                                                      },
                                             "customDetails":  {
                                                                   "DeviceName":  "DeviceName",
                                                                   "InitiatingProcess":  "InitiatingProcess",
                                                                   "TargetProcess":  "TargetProcess",
                                                                   "InitiatingProcessId":  "InitiatingProcessId",
                                                                   "TargetProcessId":  "TargetProcessId",
                                                                   "InjectedDLL":  "InjectedDLL",
                                                                   "DeviceId":  "DeviceId"
                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Host",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "HostName",
                                                                                                  "columnName":  "DeviceName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "File",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "InjectedDLL"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Process",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "CommandLine",
                                                                                                  "columnName":  "InitiatingProcessCommandLine"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Process",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "ProcessId",
                                                                                                  "columnName":  "InitiatingProcessId"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}