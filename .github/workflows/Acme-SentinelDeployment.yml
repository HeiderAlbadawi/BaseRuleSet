name: Deploy Content to acmesentinel [7695aa57-fdc6-4f57-97d4-76856d0cd210]
# Note: This workflow will deploy everything in the root directory.
# To deploy content only from a specific path (for example SentinelContent):
#   1. Add the target path to the "paths" property like such
#    paths:
#    - 'SentinelContent/**'
#    - '!.github/workflows/**'
#    - '.github/workflows/sentinel-deploy-7695aa57-fdc6-4f57-97d4-76856d0cd210.yml'
#   2. Append the path to the directory environment variable below
#       directory: '${{ github.workspace }}/SentinelContent'

on:
  push:
    branches: [ main ]
    paths:
    - 'BaseRuleSet/**'
    - 'AcmeSentinel/**'
    - '!.github/workflows/**'  # this filter prevents other workflow changes from triggering this workflow

jobs:
  BaseRulesDeployment:
    runs-on: windows-latest
    env:
      resourceGroupName: 'training_jordan'
      workspaceName: 'acmesentinel'
      workspaceId: '8a587a2c-3d1a-453b-b45e-8022007d20c1'
      directory: '${{ github.workspace }}/BaseRuleSet'
      cloudEnv: 'AzureCloud'
      contentTypes: 'AnalyticsRule'
      branch: 'main'
      sourceControlId: '7695aa57-fdc6-4f57-97d4-76856d0cd210'
      rootDirectory: '${{ github.workspace }}'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'
    permissions:
      contents: write
      id-token: write # Require write permission to Fetch an OIDC token.

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_SENTINEL_CLIENTID_7695aa57fdc64f5797d476856d0cd210 }}
        tenant-id: ${{ secrets.AZURE_SENTINEL_TENANTID_7695aa57fdc64f5797d476856d0cd210 }}
        subscription-id: ${{ secrets.AZURE_SENTINEL_SUBSCRIPTIONID_7695aa57fdc64f5797d476856d0cd210 }}
        environment: 'AzureCloud'
        audience: api://AzureADTokenExchange
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30

    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v2
      if: ${{ steps.login1.outcome=='failure' }}
      with:
        client-id: ${{ secrets.AZURE_SENTINEL_CLIENTID_7695aa57fdc64f5797d476856d0cd210 }}
        tenant-id: ${{ secrets.AZURE_SENTINEL_TENANTID_7695aa57fdc64f5797d476856d0cd210 }}
        subscription-id: ${{ secrets.AZURE_SENTINEL_SUBSCRIPTIONID_7695aa57fdc64f5797d476856d0cd210 }}
        environment: 'AzureCloud'
        audience: api://AzureADTokenExchange
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30

    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v2
      if: ${{ steps.login2.outcome=='failure'  }}
      with:
        client-id: ${{ secrets.AZURE_SENTINEL_CLIENTID_7695aa57fdc64f5797d476856d0cd210 }}
        tenant-id: ${{ secrets.AZURE_SENTINEL_TENANTID_7695aa57fdc64f5797d476856d0cd210 }}
        subscription-id: ${{ secrets.AZURE_SENTINEL_SUBSCRIPTIONID_7695aa57fdc64f5797d476856d0cd210 }}
        environment: 'AzureCloud'
        audience: api://AzureADTokenExchange
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Fetch current and previous commit to detect changes

    - name: Get changed files
      id: changed-files
      shell: pwsh
      run: |
        # Get list of changed JSON files in BaseRuleSet/ directory
        $changedFiles = git diff --name-only HEAD~1 HEAD -- 'BaseRuleSet/*.json'
        $changedFilesString = $changedFiles -join ','
        echo "changed_files=$changedFilesString" >> $env:GITHUB_OUTPUT
        echo "Changed files: $changedFilesString"
        
        # Get list of deleted JSON files in BaseRuleSet/ directory
        $deletedFiles = git diff --name-only --diff-filter=D HEAD~1 HEAD -- 'BaseRuleSet/*.json'
        $deletedFilesString = $deletedFiles -join ','
        echo "deleted_files=$deletedFilesString" >> $env:GITHUB_OUTPUT
        echo "Deleted files: $deletedFilesString"
        
        # If no specific rule files changed or deleted, we don't need to deploy anything
        if ([string]::IsNullOrWhiteSpace($changedFilesString) -and [string]::IsNullOrWhiteSpace($deletedFilesString)) {
          echo "No JSON rule files changed or deleted, skipping deployment"
          echo "skip_deployment=true" >> $env:GITHUB_OUTPUT
        } else {
          echo "skip_deployment=false" >> $env:GITHUB_OUTPUT
        }

    - name: Deploy Content to Microsoft Sentinel
      if: steps.changed-files.outputs.skip_deployment == 'false'
      uses: azure/powershell@v2
      with:
        azPSVersion: 'latest'
        inlineScript: |
          # Set changed files as environment variable for the PowerShell script
          $env:CHANGED_FILES = "${{ steps.changed-files.outputs.changed_files }}"
          $env:DELETED_FILES = "${{ steps.changed-files.outputs.deleted_files }}"
          ${{ github.workspace }}//.github/workflows/Acme-SentinelDeployment.ps1

  CustomerRulesDeployment:
    runs-on: windows-latest
    env:
      resourceGroupName: 'training_jordan'
      workspaceName: 'acmesentinel'
      workspaceId: '8a587a2c-3d1a-453b-b45e-8022007d20c1'
      directory: '${{ github.workspace }}/AcmeSentinel'
      cloudEnv: 'AzureCloud'
      contentTypes: 'AnalyticsRule'
      branch: 'main'
      sourceControlId: '7695aa57-fdc6-4f57-97d4-76856d0cd210'
      rootDirectory: '${{ github.workspace }}'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'
    permissions:
      contents: write
      id-token: write # Require write permission to Fetch an OIDC token.

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_SENTINEL_CLIENTID_7695aa57fdc64f5797d476856d0cd210 }}
        tenant-id: ${{ secrets.AZURE_SENTINEL_TENANTID_7695aa57fdc64f5797d476856d0cd210 }}
        subscription-id: ${{ secrets.AZURE_SENTINEL_SUBSCRIPTIONID_7695aa57fdc64f5797d476856d0cd210 }}
        environment: 'AzureCloud'
        audience: api://AzureADTokenExchange
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30

    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v2
      if: ${{ steps.login1.outcome=='failure' }}
      with:
        client-id: ${{ secrets.AZURE_SENTINEL_CLIENTID_7695aa57fdc64f5797d476856d0cd210 }}
        tenant-id: ${{ secrets.AZURE_SENTINEL_TENANTID_7695aa57fdc64f5797d476856d0cd210 }}
        subscription-id: ${{ secrets.AZURE_SENTINEL_SUBSCRIPTIONID_7695aa57fdc64f5797d476856d0cd210 }}
        environment: 'AzureCloud'
        audience: api://AzureADTokenExchange
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30

    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v2
      if: ${{ steps.login2.outcome=='failure'  }}
      with:
        client-id: ${{ secrets.AZURE_SENTINEL_CLIENTID_7695aa57fdc64f5797d476856d0cd210 }}
        tenant-id: ${{ secrets.AZURE_SENTINEL_TENANTID_7695aa57fdc64f5797d476856d0cd210 }}
        subscription-id: ${{ secrets.AZURE_SENTINEL_SUBSCRIPTIONID_7695aa57fdc64f5797d476856d0cd210 }}
        environment: 'AzureCloud'
        audience: api://AzureADTokenExchange
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Fetch current and previous commit to detect changes

    - name: Get changed files
      id: changed-files
      shell: pwsh
      run: |
        # Get list of changed JSON files in BaseRuleSet/ directory
        $changedFiles = git diff --name-only HEAD~1 HEAD -- 'AcmeSentinel/*.json'
        $changedFilesString = $changedFiles -join ','
        echo "changed_files=$changedFilesString" >> $env:GITHUB_OUTPUT
        echo "Changed files: $changedFilesString"
        
        # Get list of deleted JSON files in AcmeSentinel/ directory
        $deletedFiles = git diff --name-only --diff-filter=D HEAD~1 HEAD -- 'AcmeSentinel/*.json'
        $deletedFilesString = $deletedFiles -join ','
        echo "deleted_files=$deletedFilesString" >> $env:GITHUB_OUTPUT
        echo "Deleted files: $deletedFilesString"
        
        # If no specific rule files changed or deleted, we don't need to deploy anything
        if ([string]::IsNullOrWhiteSpace($changedFilesString) -and [string]::IsNullOrWhiteSpace($deletedFilesString)) {
          echo "No JSON rule files changed or deleted, skipping deployment"
          echo "skip_deployment=true" >> $env:GITHUB_OUTPUT
        } else {
          echo "skip_deployment=false" >> $env:GITHUB_OUTPUT
        }

    - name: Deploy Content to Microsoft Sentinel
      if: steps.changed-files.outputs.skip_deployment == 'false'
      uses: azure/powershell@v2
      with:
        azPSVersion: 'latest'
        inlineScript: |
          # Set changed files as environment variable for the PowerShell script
          $env:CHANGED_FILES = "${{ steps.changed-files.outputs.changed_files }}"
          $env:DELETED_FILES = "${{ steps.changed-files.outputs.deleted_files }}"
          ${{ github.workspace }}//.github/workflows/Acme-SentinelDeployment.ps1





