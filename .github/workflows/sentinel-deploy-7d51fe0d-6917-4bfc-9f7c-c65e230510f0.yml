name: Deploy Sentinel Rules

on:
  workflow_dispatch:

jobs:
  deploy-sentinel:
    name: Merge + Deploy Sentinel Rules
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PowerShell
        uses: actions/setup-powershell@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Az Module
        shell: pwsh
        run: |
          Install-Module -Name Az -Force -Scope CurrentUser
          Import-Module Az

      - name: Merge Base + Custom Rules
        shell: pwsh
        run: |
          $BaseRulesPath = "${{ github.workspace }}/BaseRules"
          $SentinelPath  = "${{ github.workspace }}/AcmeSentinel"
          $ResourceGroupName = "training_jordan"
          $WorkspaceName = "acmesentinel"
          $TempOutputRoot = "$env:RUNNER_TEMP\sentinel-build"

          # Ensure temp output folder exists
          if (-not (Test-Path $TempOutputRoot)) {
              New-Item -Path $TempOutputRoot -ItemType Directory -Force | Out-Null
          }

          $mergePs1 = Join-Path $SentinelPath "merge-and-deploy-for-acme.ps1"
          Write-Host "[Info] Running merge-and-deploy-for-acme.ps1..."
          & $mergePs1 `
              -BaseRulesPath $BaseRulesPath `
              -SentinelPath $SentinelPath `
              -ResourceGroupName $ResourceGroupName `
              -WorkspaceName $WorkspaceName `
              -TempOutputRoot $TempOutputRoot

      - name: Deploy All Rules via Sentinel Sync
        shell: pwsh
        run: |
          # Path to original sentinel-sync / Azure Sentinel deploy script
          $syncPs1 = Join-Path $SentinelPath "azure-sentinel-deploy-7d51fe0d-6917-4bfc-9f7c-c65e230510f0.ps1"

          Write-Host "[Info] Running original sentinel-sync script to deploy all merged + custom rules..."
          & $syncPs1 `
              -CloudEnv "prod" `
              -ResourceGroupName $ResourceGroupName `
              -WorkspaceName $WorkspaceName `
              -WorkspaceId "<workspace-id-guid>" `
              -Directory $SentinelPath `
              -ContentTypes "AnalyticsRule,AutomationRule,HuntingQuery,Parser,Playbook,Workbook" `
              -SourceControlId "<source-control-id>" `
              -RootDirectory $SentinelPath `
              -GithubAuthToken "${{ secrets.GITHUB_TOKEN }}" `
              -GithubRepository "${{ github.repository }}" `
              -BranchName "${{ github.ref_name }}" `
              -SmartDeployment "true"
