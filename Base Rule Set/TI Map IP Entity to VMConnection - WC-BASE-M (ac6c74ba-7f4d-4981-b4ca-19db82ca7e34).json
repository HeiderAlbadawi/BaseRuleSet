{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/ac6c74ba-7f4d-4981-b4ca-19db82ca7e34\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/ac6c74ba-7f4d-4981-b4ca-19db82ca7e34\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "TI Map IP Entity to VMConnection - [WC-BASE-M]",
                                             "description":  "This query maps any IP indicators of compromise (IOCs) from threat intelligence (TI), by searching for matches in VMConnection.",
                                             "severity":  "Medium",
                                             "enabled":  false,
                                             "query":  "let dt_lookBack = 1h; // Look back 1 hour for VMConnection events\nlet ioc_lookBack = 14d; // Look back 14 days for threat intelligence indicators\n// Fetch threat intelligence indicators related to IP addresses\nlet IP_Indicators = ThreatIntelIndicators\n| where TimeGenerated \u003e ago(14d)\n| distinct TIEntity = ObservableValue\n| where isnotempty( TIEntity);\n// Perform a join between IP indicators and VMConnection events\nlet alerttable = \nIP_Indicators\n// Use innerunique to keep performance fast and result set low, as we only need one match to indicate potential malicious activity that needs investigation\n| join kind=innerunique (\n    VMConnection\n    | where TimeGenerated \u003e= ago(dt_lookBack)\n    | extend VMConnection_TimeGenerated = TimeGenerated\n    )\n    on $left.TIEntity == $right.RemoteIp\n// Filter out VMConnection events that occurred after the expiration of the corresponding indicator\n// Group the results by IndicatorId and keep the VMConnection event with the latest timestamp\n| summarize VMConnection_TimeGenerated = arg_max(VMConnection_TimeGenerated, *) by RemoteIp\n// Select the desired output fields\n| project\n    VMConnection_TimeGenerated,\n    Description,\n    TIEntity,\n    Computer,\n    Direction,\n    ProcessName,\n    SourceIp,\n    DestinationIp,\n    RemoteIp,\n    Protocol,\n    DestinationPort,\n    Type\n| extend\n    timestamp = VMConnection_TimeGenerated,\n    HostName = tostring(split(Computer, \u0027.\u0027, 0)[0]),\n    DnsDomain = tostring(strcat_array(array_slice(split(Computer, \u0027.\u0027), 1, -1), \u0027.\u0027));\nlet ConnectionCountCheck = VMConnection\n| join kind=inner alerttable on $left.RemoteIp == $right.RemoteIp\n| summarize Established = sum(LinksEstablished), Terimnated = sum(LinksTerminated) by RemoteIp, Computer\n| where Established \u003e Terimnated\n| distinct RemoteIp;\nalerttable\n| join kind=inner ConnectionCountCheck on RemoteIp\n",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P14D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT1H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CommandAndControl"
                                                         ],
                                             "techniques":  [
                                                                "T1071"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  "9713e3c0-1410-468d-b79e-383448434b2d",
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  null,
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Host",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "HostName",
                                                                                                  "columnName":  "HostName"
                                                                                              },
                                                                                              {
                                                                                                  "identifier":  "DnsDomain",
                                                                                                  "columnName":  "DnsDomain"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "RemoteIp"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  "1.4.2"
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}